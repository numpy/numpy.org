params:
  machinelearning:
    paras:
      - 
        para1: O NumPy forma a base de bibliotecas de aprendizagem de máquina poderosas como [scikit-learn](https://scikit-learn.org) e [SciPy](https://www.scipy.org). À medida que a disciplina de aprendizagem de máquina cresce, a lista de bibliotecas construidas a partir do NumPy também cresce. As funcionalidades de deep learning do [TensorFlow](https://www.tensorflow.org) tem diversas aplicações &mdash; entre elas, reconhecimento de imagem e de fala, aplicações baseadas em texto, análise de séries temporais, e detecção de vídeo. O [PyTorch](https://pytorch.org), outra biblioteca de deep learning, é popular entre pesquisadores em visão computacional e processamento de linguagem natural. O [MXNet](https://github.com/apache/incubator-mxnet) é outro pacote de IA, que fornece templates e protótipos para deep learning.
        para2: Técnicas estatísticas chamadas métodos de [ensemble](https://towardsdatascience.com/ensemble-methods-bagging-boosting-and-stacking-c9214a10a205) tais como binning, bagging, stacking, e boosting estão entre os algoritmos de ML implementados por ferramentas tais como [XGBoost](https://github.com/dmlc/xgboost), [LightGBM](https://lightgbm.readthedocs.io/en/latest/), e [CatBoost](https://catboost.ai) &mdash; um dos motores de inferência mais rápidos. [Yellowbrick](https://www.scikit-yb.org/en/latest/) e [Eli5](https://eli5.readthedocs.io/en/latest/) oferecem visualizações para aprendizagem de máquina.
  arraylibraries:
    intro:
      - 
        text: A API do NumPy é o ponto de partida quando bibliotecas são escritas para explorar hardware inovador, criar tipos de arrays especializados, ou adicionar capacidades além do que o NumPy fornece.
    headers:
      - 
        text: Biblioteca de Arrays
      - 
        text: Recursos e áreas de aplicação
    libraries:
      - 
        title: Dask
        text: Arrays distribuídas e paralelismo avançado para análise, permitindo desempenho em escala.
        img: /images/content_images/arlib/dask.png
        alttext: Dask
        url: https://dask.org/
      - 
        title: CuPy
        text: Biblioteca de matriz compatível com NumPy para computação acelerada pela GPU com Python.
        img: /images/content_images/arlib/cupy.png
        alttext: CuPy
        url: https://cupy.chainer.org
      - 
        title: JAX
        text: "Transformações combináveis de programas NumPy: vetorização, compilação just-in-time para GPU/TPU."
        img: /images/content_images/arlib/jax_logo_250px.png
        alttext: JAX
        url: https://github.com/google/jax
      - 
        title: Xarray
        text: Arrays multidimensionais rotuladas e indexadas para análise e visualização avançadas
        img: /images/content_images/arlib/xarray.png
        alttext: xarray
        url: https://xarray.pydata.org/en/stable/index.html
      - 
        title: Sparse
        text: Biblioteca de arrays compatíveis com o NumPy que pode ser integrada com Dask e álgebra linear esparsa da SciPy.
        img: /images/content_images/arlib/sparse.png
        alttext: sparse
        url: https://sparse.pydata.org/en/latest/
      - 
        title: PyTorch
        text: Framework de deep learning que acelera o caminho entre prototipação de pesquisa e colocação em produção.
        img: /images/content_images/arlib/pytorch-logo-dark.svg
        alttext: PyTorch
        url: https://pytorch.org/
      - 
        title: TensorFlow
        text: Uma plataforma completa para aprendizagem de máquina que permite construir e colocar em produção aplicações usando ML facilmente.
        img: /images/content_images/arlib/tensorflow-logo.svg
        alttext: TensorFlow
        url: https://www.tensorflow.org
      - 
        title: MXNet
        text: Framework de deep learning voltado para flexibilizar prototipação em pesquisa e produção.
        img: /images/content_images/arlib/mxnet_logo.png
        alttext: MXNet
        url: https://mxnet.apache.org/
      - 
        title: Arrow
        text: Uma plataforma de desenvolvimento multi-linguagens para dados e análise para dados armazenados em colunas na memória.
        img: /images/content_images/arlib/arrow.png
        alttext: arrow
        url: https://github.com/apache/arrow
      - 
        title: xtensor
        text: Arrays multidimensionais com broadcasting e avaliação preguiçosa (lazy computing) para análise numérica.
        img: /images/content_images/arlib/xtensor.png
        alttext: xtensor
        url: https://github.com/xtensor-stack/xtensor-python
      - 
        title: Awkward Array
        text: Manipulação de dados JSON-like com sintaxe NumPy-like.
        img: /images/content_images/arlib/awkward.svg
        alttext: awkward
        url: https://awkward-array.org/
      - 
        title: uarray
        text: Sistema de backend Python que dissocia a API da implementação; unumpy fornece uma API NumPy.
        img: /images/content_images/arlib/uarray.png
        alttext: uarray
        url: https://uarray.org/en/latest/
      - 
        title: tensorly
        text: Ferramentas para aprendizagem com tensores, algebra e backends para usar NumPy, MXNet, PyTorch, TensorFlow ou CuPy sem esforço.
        img: /images/content_images/arlib/tensorly.png
        alttext: tensorly
        url: http://tensorly.org/stable/home.html
  scientificdomains:
    intro:
      - 
        text: Quase todos os cientistas que trabalham em Python se baseiam na potência do NumPy.
      - 
        text: "NumPy traz o poder computacional de linguagens como C e Fortran para Python, uma linguagem muito mais fácil de aprender e usar. Com esse poder vem a simplicidade: uma solução no NumPy é frequentemente clara e elegante."
    librariesrow1:
      - 
        title: Computação quântica
        alttext: Um chip de computador.
        img: /images/content_images/sc_dom_img/quantum_computing.svg
      - 
        title: Computação estatística
        alttext: Um gráfico com uma linha em movimento para cima.
        img: /images/content_images/sc_dom_img/statistical_computing.svg
      - 
        title: Processamento de sinais
        alttext: Um gráfico de barras com valores positivos e negativos.
        img: /images/content_images/sc_dom_img/signal_processing.svg
      - 
        title: Processamento de imagens
        alttext: Uma fotografia das montanhas.
        img: /images/content_images/sc_dom_img/image_processing.svg
      - 
        title: Gráficos e Redes
        alttext: Um grafo simples.
        img: /images/content_images/sc_dom_img/sd6.svg
      - 
        title: Processos de Astronomia
        alttext: Um telescópio.
        img: /images/content_images/sc_dom_img/astronomy_processes.svg
      - 
        title: Psicologia Cognitiva
        alttext: Uma cabeça humana com engrenagens.
        img: /images/content_images/sc_dom_img/cognitive_psychology.svg
    librariesrow2:
      - 
        title: Bioinformática
        alttext: Um pedaço de DNA.
        img: /images/content_images/sc_dom_img/bioinformatics.svg
      - 
        title: Inferência Bayesiana
        alttext: Um gráfico com uma curva em forma de sino.
        img: /images/content_images/sc_dom_img/bayesian_inference.svg
      - 
        title: Análise Matemática
        alttext: Quatro símbolos matemáticos.
        img: /images/content_images/sc_dom_img/mathematical_analysis.svg
      - 
        title: Química
        alttext: Um tubo de ensaio.
        img: /images/content_images/sc_dom_img/chemistry.svg
      - 
        title: Geociências
        alttext: A Terra.
        img: /images/content_images/sc_dom_img/geoscience.svg
      - 
        title: Processamento Geográfico
        alttext: Um mapa.
        img: /images/content_images/sc_dom_img/GIS.svg
      - 
        title: Arquitetura e Engenharia
        alttext: Uma placa de desenvolvimento de microprocessador.
        img: /images/content_images/sc_dom_img/robotics.svg
  datascience:
    intro: "NumPy está no centro de um rico ecossistema de bibliotecas de ciência de dados. Um fluxo de trabalho típico de ciência de dados exploratório pode parecer assim:"
    image1:
      - 
        img: /images/content_images/ds-landscape.png
        alttext: Diagrama de bibliotecas Python. As cinco categorias são 'Extrair, Transformar, Carregar', 'Exploração de Dados', 'Modelo de Dados', 'Avaliação de Dados' e 'Apresentação de Dados'.
    image2:
      - 
        img: /images/content_images/data-science.png
        alttext: Diagram of three overlapping circle. The circles labeled 'Mathematics', 'Computer Science' and 'Domain Expertise'. In the middle of the diagram, which has the three circles overlapping it, is an area labeled 'Data Science'.
    examples:
      - 
        text: "<b>Extract, Transform, Load: </b>[Pandas](https://pandas.pydata.org),[ Intake](https://intake.readthedocs.io),[PyJanitor](https://pyjanitor-devs.github.io/pyjanitor/)"
      - 
        text: "<b>Exploratory analysis: </b>[Jupyter](https://jupyter.org),[Seaborn](https://seaborn.pydata.org),[ Matplotlib](https://matplotlib.org),[ Altair](https://altair-viz.github.io)"
      - 
        text: "<b>Model and evaluate: </b>[scikit-learn](https://scikit-learn.org),[ statsmodels](https://www.statsmodels.org/stable/index.html),[ PyMC3](https://docs.pymc.io),[ spaCy](https://spacy.io)"
      - 
        text: "<b>Report in a dashboard: </b>[Dash](https://plotly.com/dash),[ Panel](https://panel.holoviz.org),[ Voila](https://github.com/voila-dashboards/voila)"
    content:
      - 
        text: For high data volumes, [Dask](https://dask.org) and[Ray](https://ray.io/) are designed to scale. Stabledeployments rely on data versioning ([DVC](https://dvc.org)),experiment tracking ([MLFlow](https://mlflow.org)), andworkflow automation ([Airflow](https://airflow.apache.org) and[Prefect](https://www.prefect.io)).
  visualization:
    images:
      - 
        url: https://www.fusioncharts.com/blog/best-python-data-visualization-libraries
        img: /images/content_images/v_matplotlib.png
        alttext: Um streamplot feito em matplotlib
      - 
        url: https://github.com/yhat/ggpy
        img: /images/content_images/v_ggpy.png
        alttext: Um gráfico scatter-plot feito em ggpy
      - 
        url: https://www.journaldev.com/19692/python-plotly-tutorial
        img: /images/content_images/v_plotly.png
        alttext: Um box-plot feito no plotly
      - 
        url: https://altair-viz.github.io/gallery/streamgraph.html
        img: /images/content_images/v_altair.png
        alttext: Um gráfico streamgraph feito em altair
      - 
        url: https://seaborn.pydata.org
        img: /images/content_images/v_seaborn.png
        alttext: A plot duplo com dois tipos de gráficos, um plot-graph e um gráfico de frequência feitos no seaborn
      - 
        url: https://docs.pyvista.org/
        img: /images/content_images/v_pyvista.png
        alttext: Uma renderização de volume 3D feita no PyVista.
      - 
        url: https://napari.org
        img: /images/content_images/v_napari.png
        alttext: Uma imagem multidimensional, feita em napari.
      - 
        url: https://vispy.org/gallery/index.html
        img: /images/content_images/v_vispy.png
        alttext: Diagrama de Voronoi feito com vispy.
    content:
      - 
        text: NumPy é um componente essencial no crescente [campo de visualização em Python](https://pyviz.org/overviews/index.html), que inclui [Matplotlib](https://matplotlib.org), [Seaborn](https://seaborn.pydata.org), [Plotly](https://plot.ly), [Altair](https://altair-viz.github.io), [Bokeh](https://docs.bokeh.org/en/latest/), [Holoviz](https://holoviz.org), [Vispy](http://vispy.org), [Napari](https://github.com/napari/napari), e [PyVista](https://github.com/pyvista/pyvista), para citar alguns.
      - 
        text: O processamento de grandes arrays acelerado pela NumPy permite que os pesquisadores visualizem conjuntos de dados muito maiores do que o Python nativo poderia permitir.
